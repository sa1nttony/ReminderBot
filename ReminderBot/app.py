import telebot
import datetime
import random
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ReminderBot.settings')
django.setup()

from config import TOKEN
from phrases import commands, example_headers, example_descriptions, hints
from bot.models import Chat, ChatUser, Task
# from DB.handler_db import new_user, new_task, get_user_id, update_user
from utils import (IncorrectFormat,
                   TimePassed,
                   UserAlreadyExist,
                   add_new_user,
                   user_exist,
                   get_account,
                   new_password,
                   new_task,
                   validate_datetime,
                   get_timezone_by_location,
                   update_user_tz,
                   )


tbot = telebot.TeleBot(TOKEN, threaded=True, num_threads=300, parse_mode='HTML')

#TODO –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –≤ –±–¥ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —é–∑–µ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞, –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –µ–≥–æ –≤ —á–∞—Ç, –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é new_task
@tbot.message_handler(commands=['help'])
def info(message: telebot.types.Message):
    text = '–¶–µ–ª—å –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ - –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –∫–∞–∫ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, —Ç–∞–∫ –∏ –≥—Ä—É–ø–ø—ã –ª—é–¥–µ–π. \n \n' \
    '–í –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è —Å–µ–±—è, –∞ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ—Å—Ç–∞–≤–ª—è—Ç—å –∑–∞–¥–∞–Ω–∏—è ' \
    '–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∫–æ–ª–ª–µ–≥, –¥—Ä—É–∑–µ–π –∏–ª–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ \n \n' \
    '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã: \n'
    counter = 1
    for c in [*commands]:
        cmnd = f'{counter}. {c} - {commands[c]}\n'
        text = text + cmnd
        counter += 1
    tbot.reply_to(message, text)


# # @tbot.message_handler(content_types=['new_chat_members'])
# @tbot.message_handler(commands=['/init'])
# def register_member(message: telebot.types.Message):
#     firstname = message.json['new_chat_member']['first_name']
#     username = message.json['new_chat_member']['username']
#     user_id = message.json['new_chat_member']['id']
#     chat_id = message.chat.id
#     if user_id != tbot.user.id:
#         try:
#             add_new_user(firstname, username)
#         except UserAlreadyExist as e:
#             tbot.reply_to(message, f'–ü—Ä–∏–≤–µ—Ç, @{username}! –ú—ã —Å —Ç–æ–±–æ–π —É–∂–µ –∑–Ω–∞–∫–æ–º—ã. –ï—Å–ª–∏ –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å –∏–ª–∏ –ª–æ–≥–∏–Ω - –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—É /my_account')
#         else:
#             tbot.reply_to(message,
#                          f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. '
#                          f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å - –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è(@{tbot.user.username}) –∫–æ–º–∞–Ω–¥—É /my_account')
#     else:
#         tbot.send_message(chat_id, '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ —á–µ–º-–ª–∏–±–æ. '
#                                    '\n–û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö')


@tbot.message_handler(commands=['start'])
def register_user(message: telebot.types.Message):
    firstname = message.from_user.first_name
    username = message.from_user.username
    telegram_id = message.from_user.id
    try:
        password = add_new_user(firstname, username, telegram_id)
    except UserAlreadyExist as e:
        tbot.reply_to(message, f'–û—à–∏–±–∫–∞: {e}')
    else:
        self_message = f"""–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! \n–í–∞—à –ª–æ–≥–∏–Ω <strong>{username}</strong> 
        –í–∞—à –ø–∞—Ä–æ–ª—å <span class="tg-spoiler"><strong>{password}</strong></span>"""
        tbot.reply_to(message, self_message, parse_mode='HTML')
    #TODO –î–æ–±–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ç–∞–π–º–∑–æ–Ω—ã
    #TODO –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–∑–æ–Ω—ã


@tbot.message_handler(commands=['my_account'])
def my_account(message: telebot.types.Message):
    username = message.from_user.username
    user_id = message.from_user.id
    chat_id = message.chat.id
    account = get_account(username)
    if user_id != chat_id:
        tbot.reply_to(message, f'–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –ª—É—á—à–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @{tbot.user.username}, '
                               f'—Ç—ã –≤–µ–¥—å –Ω–µ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –≤–µ—Å—å —á–∞—Ç —É–≤–∏–¥–µ–ª —Ç–≤–æ–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å?')
    else:
        tbot.reply_to(message, f"""–í–∞—à –ª–æ–≥–∏–Ω <strong>{account['username']}</strong>\n–í–∞—à –ø–∞—Ä–æ–ª—å <span class="tg-spoiler"><strong>{account['password']}</strong></span>""",
                      parse_mode='HTML')


@tbot.message_handler(commands=['change_password'])
def change_password(message: telebot.types.Message):
    username = message.from_user.username
    user_id = message.from_user.id
    chat_id = message.chat.id
    if user_id != chat_id:
        tbot.reply_to(message, f'–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –ª—É—á—à–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @{tbot.user.username}, '
                               f'—Ç—ã –≤–µ–¥—å –Ω–µ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –≤–µ—Å—å —á–∞—Ç —É–≤–∏–¥–µ–ª —Ç–≤–æ–π –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å?')
    else:
        new_password(username)
        account = get_account(username)
        tbot.reply_to(message, f"""–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω\n–í–∞—à –ª–æ–≥–∏–Ω <strong>{account['username']}</strong>\n–í–∞—à –ø–∞—Ä–æ–ª—å <span class="tg-spoiler"><strong>{account['password']}</strong></span>""",
                      parse_mode='HTML')

#–í—ã—á–∏—Å–ª–µ–Ω–∏–µ tz
@tbot.message_handler(content_types=['location'])
def get_location(message: telebot.types.Message):
    latitude = message.location.latitude
    longitude = message.location.longitude
    tz = get_timezone_by_location(longitude=longitude, latitude=latitude)
    update_user_tz(tz, str(message.from_user.id))


#–ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
@tbot.message_handler(commands=['new_task'])
def start_task(message: telebot.types.Message):
    username = message.from_user.username
    task_info = {'chat': message.chat.id}
    task_info['user'] = username
    msg = tbot.send_message(message.chat.id, f'–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è @{task_info["user"]}\n'
                                     f'–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä "{example_headers[random.randint(0, len(example_headers)-1)]}"')
    task_info['prev_msg'] = (msg.chat.id, msg.id)
    tbot.register_next_step_handler(message, task_header, task_info)


def task_user(message, task_info):
    task_info['user'] = message.text[1::]
    tbot.delete_message(message.chat.id, message.id)
    tbot.delete_message(message.chat.id, message.id - 1)
    msg = tbot.send_message(message.chat.id, f'–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è @{task_info["user"]}\n'
                                             f'–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä "{example_headers[random.randint(0, len(example_headers) - 1)]}"')
    tbot.register_next_step_handler(msg, task_header, task_info)


def task_header(message, task_info):
    task_info['header'] = message.text
    tbot.delete_message(message.chat.id, message.id)
    message_text = f"""<strong>üí° –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:</strong>

<strong>–ù–∞–∑–≤–∞–Ω–∏–µ</strong>: <em>{task_info['header']}</em>
_____
–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä "{example_descriptions[random.randint(0, len(example_headers)-1)]}\""""
    tbot.edit_message_text(message_text, task_info['prev_msg'][0], task_info['prev_msg'][1])
    tbot.register_next_step_handler(message, task_datetime, task_info)


def task_datetime(message, task_info):
    task_info['description'] = message.text
    tbot.delete_message(message.chat.id, message.id)
    message_text = f"""<strong>üí° –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:</strong>

<strong>–ù–∞–∑–≤–∞–Ω–∏–µ</strong>: <em>{task_info['header']}</em>
<strong>–û–ø–∏—Å–∞–Ω–∏–µ</strong>: <em>{task_info['description']}</em>
_____
–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î –ú–ú –ì–ì–ì–ì –ß–ß:–ú–ú". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.datetime.now().strftime("%d.%m.%Y %H:%M")}\""""
    tbot.edit_message_text(message_text, task_info['prev_msg'][0], task_info['prev_msg'][1])
    tbot.register_next_step_handler(message, create_task, task_info)


def create_task(message, task_info):
    try:
        tbot.delete_message(message.chat.id, message.id)
        date = validate_datetime(message.text)
    except (IncorrectFormat, TimePassed) as error:
        error_text = f"""<strong>üí° –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:</strong>

<strong>–ù–∞–∑–≤–∞–Ω–∏–µ</strong>: <em>{task_info['header']}</em>
<strong>–û–ø–∏—Å–∞–Ω–∏–µ</strong>: <em>{task_info['description']}</em>
_____
‚ùå –û—à–∏–±–∫–∞
{error}
–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.datetime.now().strftime("%d.%m.%Y %H:%M")}\""""
        tbot.edit_message_text(error_text, task_info['prev_msg'][0], task_info['prev_msg'][1])
        tbot.register_next_step_handler(message, create_task, task_info)
    else:
        task_info['date'] = date
        message_text = f"""<strong>‚úÖ–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞:</strong>

<strong>–ù–∞–∑–≤–∞–Ω–∏–µ</strong>: <em>{task_info['header']}</em>
<strong>–û–ø–∏—Å–∞–Ω–∏–µ</strong>: <em>{task_info['description']}</em>
<strong>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</strong>: <em>{task_info['date']}</em>\n
    """
        tbot.edit_message_text(message_text, task_info['prev_msg'][0], task_info['prev_msg'][1])
        new_task(task_info['header'], task_info['description'], task_info['date'], task_info['user'])


# @bot.message_handler(commands=['admin'])
# def create_superuser(message: telebot.types.Message):
#     username = message.from_user.username
#     chat_id = message.chat.id
#     user_id = get_user_id(username, chat_id)[0][0]
#     update_user(user_id, 'is_superuser', 1)
#     text = f'{message.from_user.first_name} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —á–∞—Ç–∞'
#     bot.reply_to(message, text)
#
#
# #–ë–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
# @bot.message_handler(commands=['new_task'])
# def start_new_task(message: telebot.types.Message):
#     start_message = message
#     task = Task()
#     msg = bot.send_message(message.chat.id,
#                            f'–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä "{example_headers[random.randint(0, len(example_headers)-1)]}"')
#     bot.register_next_step_handler(msg, task_header, task, start_message)
#
#
# def task_header(message, task, start_message):
#     task.get_header = message.text
#     msg = bot.send_message(message.chat.id,
#                            f'–£–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä "{example_descriptions[random.randint(0, len(example_headers)-1)]}"')
#     bot.register_next_step_handler(msg, task_date, task, start_message)
#
#
# def task_date(message, task, start_message):
#     task.get_description = message.text
#     msg = bot.send_message(message.chat.id, f'–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î –ú–ú –ì–ì–ì–ì". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.date.today().strftime("%d %m %Y")}"')
#     bot.register_next_step_handler(msg, task_time, task, start_message)
#
#
# def task_time(message, task, start_message):
#     try:
#         task.get_date = message.text
#     except Exception as e:
#         msg = bot.send_message(message.chat.id,
#                                f'{e}\n–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î –ú–ú –ì–ì–ì–ì". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.date.today().strftime("%d %m %Y")}"')
#         bot.register_next_step_handler(msg, task_time, task, start_message)
#     else:
#         msg = bot.send_message(message.chat.id,
#                                f'–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ß–ß:–ú–ú". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.datetime.now().strftime("%H:%M")}"')
#         bot.register_next_step_handler(msg, task_user, task, start_message)
#
#
# def task_user(message, task, start_message):
#     try:
#         task.get_time = message.text
#     except Exception as e:
#         msg = bot.send_message(message.chat.id,
#                                f'{e}\n–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ß–ß:–ú–ú". –ù–∞–ø—Ä–∏–º–µ—Ä "{datetime.datetime.now().strftime("%H:%M")}"')
#         bot.register_next_step_handler(msg, task_user, task, start_message)
#     else:
#         if user_exist(start_message.from_user.username, message.chat.id):
#             task.get_creator_id = get_user_id(start_message.from_user.username, message.chat.id)[0][0]
#             if start_message.from_user.id == message.chat.id:
#                 task.get_user_id = task.get_creator_id
#                 task_commit(start_message, task)
#             else:
#                 msg = bot.send_message(message.chat.id,
#                                        f'–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä @{start_message.from_user.username}')
#                 bot.register_next_step_handler(msg, task_commit, task)
#         else:
#             bot.send_message(message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {start_message.from_user.username} –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. \n'
#                                               f'–î–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /init')
#
#
# def task_commit(message, task, attempt=0):
#     if not task.get_user_id:
#         if user_exist(message.text.replace('@', ''), message.chat.id):
#             task.get_user_id = get_user_id(message.text.replace('@', ''), message.chat.id)[0][0]
#             try:
#                 task.db_export()
#             except Exception as e:
#                 msg = f'{e}\n'
#                 for hint in hints:
#                     msg = msg + hint
#                 bot.send_message(message.chat.id, msg)
#             else:
#                 bot.send_message(message.chat.id, task)
#         else:
#             attempt += 1
#             if attempt > 3:
#                 bot.send_message(message.chat.id, '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —á–∏—Å–ª–∞ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫')
#                 return None
#             msg = bot.send_message(message.chat.id,
#                                    f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.text} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –æ–Ω –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. \n'
#                                    f'–î–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.text} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É \n/init\n'
#                                    f'–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä @{message.from_user.username}')
#             bot.register_next_step_handler(msg, task_commit, task, attempt)
#     else:
#         task.db_export()
#         bot.send_message(message.chat.id, task)


#TODO –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞—Å–∫–∏, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –¥–ª—è —Å–µ–±—è –∏–ª–∏ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –≥–æ—Ç–æ–≤–æ
#TODO –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞—Å–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ "creator_id"
# –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–≤–∞—Ç—å—Å—è –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Å–∫–∏ –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

#TODO –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞—Å–∫–∏ –æ—Ç –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#TODO –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Å–∫–∏ –¥–ª—è –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

tbot.polling(none_stop=True)
